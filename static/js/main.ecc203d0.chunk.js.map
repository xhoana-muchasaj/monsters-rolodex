{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","console","log","state","searchfield","bind","e","this","setState","target","value","fetch","then","response","json","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAML,EAAMI,QAAQE,QACpB,4BAAIN,EAAMI,QAAQG,YCDbC,EAAW,SAAAR,GAAK,OAGzB,aADA,CACA,OAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCRlBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAErB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC8CCG,E,kDA5Cb,aAAe,IAAD,6BACZ,eACAC,QAAQC,IAAI,OAAZ,gBACA,EAAKC,MAAQ,CACXV,SAAU,GACVW,YAAa,IAGf,EAAKP,aAAe,EAAKA,aAAaQ,KAAlB,gBARR,E,gDAWd,SAAaC,GACXC,KAAKC,SAAS,CAAEJ,YAAaE,EAAEG,OAAOC,U,+BAIxC,WAAqB,IAAD,OAElBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAnB,GAAQ,OAAI,EAAKe,SAAS,CAAEf,SAAUA,S,oBAGhD,WAEE,MAAkCc,KAAKJ,MAA/BV,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YACZW,EAAmBtB,EAASuB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQE,KAAK2B,cAAcC,SAASd,EAAYa,kBAGlD,OACE,sBAAKhC,UAAU,MAAf,UAEE,mDAEA,cAAC,EAAD,CACEW,YAAY,mBACZC,aAAcU,KAAKV,eAErB,cAAC,EAAD,CAAUJ,SAAUsB,W,GAzCVI,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ecc203d0.chunk.js","sourcesContent":["import React from \"react\"\nimport './card.style.css'\n\nexport const Card = props => (\n    <div className='card-container'>\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n        <h1> {props.monster.name}</h1>\n        <p>{props.monster.email}</p>\n    </div>\n);","import React from \"react\";\nimport './card-list.style.css'\n\n// custom component\nimport { Card } from \"../card/card.component\";\n\nexport const CardList = props => (\n\n    // console.log('props', props)\n    <div className='card-list'>\n        {props.monsters.map(monster => (\n            <Card key={monster.id} monster={monster} />\n        ))}\n    </div>\n);\n\n\n","import React from \"react\"\nimport './search-box.style.css'\n\nexport const SearchBox = ({placeholder,handleChange}) => (\n\n    <input\n    className='search'\n    type='search'\n    placeholder={placeholder}\n    onChange={handleChange} />\n) ","import React from \"react\";\nimport './App.css';\n\n// custom component\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\n\n//we converted the function into the class so we can access methods an properties\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    console.log('this', this)\n    this.state = {\n      monsters: [],\n      searchfield: ''\n    }\n    // when you create a custom method in a class you need to pass it the scope of this(using bind method)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(e) {\n    this.setState({ searchfield: e.target.value })\n  }\n\n  //its called when react puts the component in the page and its rendered for the first time\n  componentDidMount() {\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(monsters => this.setState({ monsters: monsters }))\n  }\n\n  render() {\n\n    const { monsters, searchfield } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchfield.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n\n        <h1>Monsters Rolodex </h1>\n\n        <SearchBox\n          placeholder='search a monster'\n          handleChange={this.handleChange} />\n\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'; //allows us to write html as a syntax inside js files and it understands it because of its react libary\nimport ReactDOM from 'react-dom';//the ract package that interacts with the dom\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/*our custom component */}\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}